[tool.poetry]
name = "PyByntic"
version = "0.1.3"
description = "PyByntic extends Pydantic with binary-typed fields and automatic byte-level serialization. Define models using familiar Pydantic syntax and turn them into compact binary payloads with full control over layout and numeric precision."
authors = ["Yan Khachko <a@slnk.icu>"]
readme = "README.md"
license = "GPLv3"
classifiers = [
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: OS Independent",
  "Framework :: Pydantic",
  "Framework :: Pydantic :: 2",
  "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.0.0"
leb128 = "^1.0.0"
typing-extensions = "^4.13.0"


[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
poethepoet = "^0.21.1"
pytest = "^7.4.0"
isort = "^7.0.0"
mypy = "^1.18.2"


[tool.isort]
profile = "black"
multi_line_output = 3

[tool.poe.tasks]
autoformat.sequence = [
    {cmd = "black pybyntic tests examples"},
    {cmd = "isort pybyntic tests examples"},
]
test.sequence = [
  {cmd = "pytest"}
]
lint.sequence = [
  {cmd = "mypy pybyntic"}
]

[tool.poetry.urls]
Documentation = "https://github.com/sijokun/PyByntic"
Source = "https://github.com/sijokun/PyByntic"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
